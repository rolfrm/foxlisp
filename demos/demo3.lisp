(defvar leg-rotation-1 0)
(defvar leg-rotation-2 0)
(defvar horse-leg
  '(offset (0 1 0)
	 (rotate ((bind leg-rotation-1) 0 0)
	  (scale (0.1 0.5 0.1)
	  
		(downcube))
	  (offset (0 -0.5 0)
		(rotate ((bind leg-rotation-2) 0 0)
		 (scale (0.1 0.5 0.1)
	 	  (downcube)))
		))))
(defvar horse
  '(rgb (0.9 0.3 0.3)
	 (horsebody
	  (vars ((leg-rotation-1 (* 50 (sin real-time)))
				(leg-rotation-2 (+ (* 40 (sin real-time)) 40))
				)
      (offset (-0.2 0 -1) (horse-leg))))
	 (vars ((leg-rotation-1 (* 50 (sin (+ 10 real-time))))
				(leg-rotation-2 (+ (* 40 (sin (+ 10 real-time))) 40))
				)
     (offset (0.2 0 -1) (horse-leg)))
	 (vars ((leg-rotation-1 (* 45 (sin real-time)))
				(leg-rotation-2 (+ (* 40 (sin real-time)) 40))
				)
     (offset (-0.2 0 1) (horse-leg)))
	 (vars ((leg-rotation-1 (* 45 (sin (+ 10 real-time))))
				(leg-rotation-2 (+ (* 40 (sin (+ 10 real-time))) 40))
				)

     (offset (0.2 0 1) (horse-leg)))
      (offset (0 1 0)
		 (offset (0 0.9 -0.95)
		  (rotate (0 0 (bind (* -10 (sin real-time))))
		  
		  (rotate (-150 0.0 00)
			(scale (0.2 1.0 0.2)
          (rgb (0.8 0.6 0.6)
			  (upcube))))))
        (scale (0.7 1.1 2.0) 
			(upcube))
		 (offset (0 -0.04 0)
        (scale (0.75 1 1.0)
			(rgb (0.8 0.6 0.6)
			 (upcube))))
		 (offset
		  (0 0.8 1)
		  (rotate (0 0 (bind (* 10 (sin real-time))))
		  (rotate (30 0 0)
		    (scale (0.5 0.6 1.0)
			(upcube)))
		  (rgb (0 0 0)
			(translate (0.25 0.2 0.30)
			 (rotate (-25 0 0)
			 (scale (0.05 0.25 0.1)
			  (upcube))))
			 (rotate (-25 0 0)
			 (translate (-0.35 0.2 0.20)
			 (scale (0.05 0.25 0.1)
			  (upcube))
			 )))

		  )
		 
    
    ))))

(set! model
	  '((perspective (1.0 1.0 0.1 100.0)
		 (depth t
		  (rgb (1 0 0)
		      (offset (0 -2 -10)
		      (rotate (0.0 (bind (* 5 real-time)) 0.0)
   		         (horse)
		      )))
)))))
